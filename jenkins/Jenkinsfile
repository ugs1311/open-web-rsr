pipeline {
    agent any

    parameters {
        string(name: 'BRANCH_NAME', defaultValue: 'master')
    }

    stages {
        stage('Clone Repository') {
            steps {
                git(url: 'git@github.com:ugs1311/open-web-rsr.git', branch: "${params.BRANCH_NAME}")
            }
        }

        stage('Syntax Check') {
            steps {
                sh 'python -m pylint --disable=C1001,C0103,C0114,W0105 *.py'
            }
        }

        stage('Functional Test') {
            steps {
                sh 'python -m pytest'
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    docker.withRegistry('https://index.docker.io/v1/', credentialsId: '<credentials_id>') {
                        def image = docker.build('<image_name>', '<context_directory>')
                    }
                }
            }
        }

        stage('Push Docker Image') {
            steps {
                script {
                    docker.withRegistry('https://index.docker.io/v1/', credentialsId: '<credentials_id>') {
                        def image = docker.image('<image_name>')
                        image.push()
                    }
                }
            }
        }

        stage('Create Virtual Environment') {
            steps {
                script {
                    def venv_dir = '/path/to/venv'
                    sh "python3 -m venv ${venv_dir}"
                    withEnv(["VIRTUAL_ENV=${venv_dir}", "PATH=${venv_dir}/bin:${env.PATH}"]) {
                        sh 'pip install -r requirements.txt'
                    }
                }
            }
        }

        stage('Run Ollama and OPEW-WEBUI') {
            steps {
                script {
                    sh 'ollama --model llama.bin --port 11010 &'
                    sh 'opew-webui --port 5000 --llamac_host localhost --llamac_port 11010 &'
                }
            }
        }

        stage('Approval') {
            steps {
                input(message: 'Please approve the changes.')
            }
        }
    }
}
